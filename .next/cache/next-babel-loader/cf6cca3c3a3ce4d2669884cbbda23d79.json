{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport NavBar from \"../components/navBar\";\nimport Head from \"next/head\";\nimport fetch from \"isomorphic-fetch\";\nimport useSWR from 'swr';\n\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\n\nconst Dashboard = ({\n  query,\n  domainExtensions,\n  localDomainExtension,\n  socialMedia\n}) => {\n  var url = \"http://localhost:3000/checkDomains?name=\" + query.name + \"&domain=\" + localDomainExtension;\n  const {\n    data,\n    error\n  } = useSWR(url, fetcher);\n\n  function arrayDiff(a1, a2) {\n    var a = [],\n        diff = [];\n\n    for (var i = 0; i < a1.length; i++) {\n      a[a1[i]] = true;\n    }\n\n    for (var i = 0; i < a2.length; i++) {\n      if (a[a2[i]]) {\n        delete a[a2[i]];\n      } else {\n        a[a2[i]] = true;\n      }\n    }\n\n    for (var k in a) {\n      diff.push(k);\n    }\n\n    return diff;\n  }\n\n  if (error) {\n    return __jsx(\"div\", null, __jsx(\"h2\", null, \"An error ocurred: \", error));\n  }\n\n  if (!data) {\n    return __jsx(\"div\", null, __jsx(Head, null, __jsx(\"title\", null, \"Xeerio | Dashboard\"), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"initial-scale=1.0, width=device-width\"\n    }), __jsx(\"meta\", {\n      name: \"description\",\n      content: \"Check the availability of your idea, upcoming product or company in terms of domain names, social media, trademarks and check the strength and originality of your name in mind.\"\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"/static/main.css\",\n      key: \"main\"\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"/static/dashboard.css\",\n      key: \"header\"\n    }), __jsx(\"link\", {\n      rel: \"shortcut icon\",\n      type: \"image/x-icon\",\n      href: \"/static/favicon.ico\"\n    })), __jsx(NavBar, {\n      loading: true\n    }), __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"h2\", null, \"Generating your report ...\"), __jsx(\"p\", null, \"Sit back while we're searching off the internet.\"), __jsx(\"div\", {\n      className: \"cards\"\n    }, __jsx(\"div\", {\n      className: \"domainCard\"\n    }, __jsx(\"h3\", null, \"Domain\"), __jsx(\"p\", null, \"Domain names that are (un)available.\"), __jsx(\"div\", {\n      className: \"domains\"\n    }, domainExtensions.map(domainExtension => __jsx(\"p\", {\n      className: \"domain loading\"\n    }, domainExtension)))), __jsx(\"div\", {\n      className: \"socialmediaCard\"\n    }, __jsx(\"h3\", null, \"Social Media\"), __jsx(\"p\", null, \"Social Media platforms that are (un)available.\"), __jsx(\"div\", {\n      className: \"socialmedia\"\n    }, socialMedia.map(platform => __jsx(\"p\", {\n      className: \"account unavailable\"\n    }, platform)))))));\n  }\n\n  return __jsx(\"div\", null, __jsx(Head, null, __jsx(\"title\", null, \"Xeerio | Dashboard\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"/static/main.css\",\n    key: \"main\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"/static/dashboard.css\",\n    key: \"header\"\n  }), __jsx(\"link\", {\n    rel: \"shortcut icon\",\n    type: \"image/x-icon\",\n    href: \"/static/favicon.ico\"\n  })), __jsx(NavBar, {\n    loading: false\n  }), __jsx(\"div\", {\n    className: \"container\"\n  }, data.domains.length > 3 ? __jsx(\"h2\", null, \"Great choice!\") : __jsx(\"h2\", null, \"Oops, bad news\"), __jsx(\"p\", null, \"Here's your personal report for \", __jsx(\"span\", {\n    className: \"name\"\n  }, query.name), \".\"), __jsx(\"div\", {\n    className: \"cards\"\n  }, __jsx(\"div\", {\n    className: \"domainCard\"\n  }, __jsx(\"h3\", null, \"Domain\"), __jsx(\"p\", null, \"Domain names that are (un)available.\"), __jsx(\"div\", {\n    className: \"domains\"\n  }, data.domains.map(domainExtension => __jsx(\"p\", {\n    className: \"domain available\"\n  }, \".\", domainExtension)), arrayDiff(domainExtensions, data.domains).map(domainExtension => __jsx(\"p\", {\n    className: \"domain unavailable\"\n  }, \".\", domainExtension)))), __jsx(\"div\", {\n    className: \"socialmediaCard\"\n  }, __jsx(\"h3\", null, \"Social Media\"), __jsx(\"p\", null, \"Social Media platforms that are (un)available.\"), __jsx(\"div\", {\n    className: \"socialmedia\"\n  }, data.usernames.map(platform => __jsx(\"p\", {\n    className: \"account \" + platform\n  }, platform)), arrayDiff(socialMedia, data.usernames).map(platform => __jsx(\"p\", {\n    className: \"account unavailable\"\n  }, platform)))), __jsx(\"div\", {\n    className: \"registerCard\"\n  }, __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(\"p\", {\n    className: \"subtitle\"\n  }, \"Register your idea\"), __jsx(\"p\", {\n    className: \"title\"\n  }, \"Want to register your name?\")), __jsx(\"div\", {\n    className: \"actions\"\n  }, __jsx(\"a\", {\n    className: \"button\"\n  }, \"Register\"))))));\n};\n\nDashboard.getInitialProps = async ({\n  query\n}) => {\n  var domainExtensions = [\"com\", \"net\", \"io\", \"shop\", \"org\", \"co\", \"me\"];\n  var socialMedia = [\"facebook\", \"instagram\", \"youtube\", \"twitter\", \"tumblr\", \"pinterest\"];\n  var localDomainExtension = await fetch(\"http://localhost:3000/getLocalExtension\");\n  localDomainExtension = await localDomainExtension.json();\n  domainExtensions.push(localDomainExtension);\n  console.log(localDomainExtension);\n  return {\n    query,\n    domainExtensions,\n    localDomainExtension,\n    socialMedia\n  };\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/jensbrehmen/Documents/xeerio/pages/dashboard.js"],"names":["React","NavBar","Head","fetch","useSWR","fetcher","args","then","res","json","Dashboard","query","domainExtensions","localDomainExtension","socialMedia","url","name","data","error","arrayDiff","a1","a2","a","diff","i","length","k","push","map","domainExtension","platform","domains","usernames","getInitialProps","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\nimport NavBar from \"../components/navBar\";\nimport Head from \"next/head\";\nimport fetch from \"isomorphic-fetch\"\nimport useSWR from 'swr'\n\nconst fetcher = (...args) => fetch(...args).then(res => res.json())\n\nconst Dashboard = ({ query, domainExtensions, localDomainExtension, socialMedia }) => {\n\n    var url = \"http://localhost:3000/checkDomains?name=\" + query.name + \"&domain=\" + localDomainExtension;\n    const { data, error } = useSWR(url, fetcher)\n\n    function arrayDiff(a1, a2) {\n        var a = [], diff = [];\n        for (var i = 0; i < a1.length; i++) {\n            a[a1[i]] = true;\n        }\n        for (var i = 0; i < a2.length; i++) {\n            if (a[a2[i]]) {\n                delete a[a2[i]];\n            } else {\n                a[a2[i]] = true;\n            }\n        }\n        for (var k in a) {\n            diff.push(k);\n        }\n        return diff;\n    }\n\n    if (error) {\n        return (\n            <div><h2>An error ocurred: {error}</h2></div>\n        )\n    }\n    if (!data) {\n        return (\n            <div>\n                <Head>\n                    <title>Xeerio | Dashboard</title>\n                    <meta\n                        name=\"viewport\"\n                        content=\"initial-scale=1.0, width=device-width\"\n                    />\n                    <meta name=\"description\" content=\"Check the availability of your idea, upcoming product or company in terms of domain names, social media, trademarks and check the strength and originality of your name in mind.\" />\n                    <link rel=\"stylesheet\" href=\"/static/main.css\" key=\"main\" />\n                    <link\n                        rel=\"stylesheet\"\n                        href=\"/static/dashboard.css\"\n                        key=\"header\"\n                    />\n                    <link\n                        rel=\"shortcut icon\"\n                        type=\"image/x-icon\"\n                        href=\"/static/favicon.ico\"\n                    />\n                </Head>\n                {/* Add navigation component */}\n                <NavBar loading={true} />\n\n                {/* Add the header on homepage */}\n                <div className=\"container\">\n                    <h2>Generating your report ...</h2>\n                    <p>Sit back while we're searching off the internet.</p>\n\n                    <div className=\"cards\">\n                        <div className=\"domainCard\">\n                            <h3>Domain</h3>\n                            <p>Domain names that are (un)available.</p>\n                            <div className=\"domains\">\n                                {domainExtensions.map((domainExtension) => (\n                                    <p className=\"domain loading\">{domainExtension}</p>\n                                ))}\n                            </div>\n                        </div>\n\n                        <div className=\"socialmediaCard\">\n                            <h3>Social Media</h3>\n                            <p>Social Media platforms that are (un)available.</p>\n                            <div className=\"socialmedia\">\n                                {socialMedia.map((platform) => (\n                                    <p className=\"account unavailable\">{platform}</p>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    return (\n        <div>\n            <Head>\n                <title>Xeerio | Dashboard</title>\n                <meta\n                    name=\"viewport\"\n                    content=\"initial-scale=1.0, width=device-width\"\n                />\n                <link rel=\"stylesheet\" href=\"/static/main.css\" key=\"main\" />\n                <link\n                    rel=\"stylesheet\"\n                    href=\"/static/dashboard.css\"\n                    key=\"header\"\n                />\n                <link\n                    rel=\"shortcut icon\"\n                    type=\"image/x-icon\"\n                    href=\"/static/favicon.ico\"\n                />\n            </Head>\n            {/* Add navigation component */}\n            <NavBar loading={false} />\n\n            {/* Add the header on homepage */}\n            <div className=\"container\">\n                {data.domains.length > 3 ? <h2>Great choice!</h2> : <h2>Oops, bad news</h2>}\n                <p>Here's your personal report for <span className=\"name\">{query.name}</span>.</p>\n\n                <div className=\"cards\">\n                    <div className=\"domainCard\">\n                        <h3>Domain</h3>\n                        <p>Domain names that are (un)available.</p>\n                        <div className=\"domains\">\n                            {data.domains.map((domainExtension) => (\n                                <p className=\"domain available\">.{domainExtension}</p>\n                            ))}\n                            {arrayDiff(domainExtensions, data.domains).map((domainExtension) => (\n                                <p className=\"domain unavailable\">.{domainExtension}</p>\n                            ))}\n                        </div>\n                    </div>\n\n                    <div className=\"socialmediaCard\">\n                        <h3>Social Media</h3>\n                        <p>Social Media platforms that are (un)available.</p>\n                        <div className=\"socialmedia\">\n                            {data.usernames.map((platform) => (\n                                <p className={\"account \" + platform}>{platform}</p>\n                            ))}\n                            {arrayDiff(socialMedia, data.usernames).map((platform) => (\n                                <p className=\"account unavailable\">{platform}</p>\n                            ))}\n                        </div>\n                    </div>\n\n                    <div className=\"registerCard\">\n                        <div className=\"content\">\n                            <p className=\"subtitle\">Register your idea</p>\n                            <p className=\"title\">Want to register your name?</p>\n                        </div>\n                        <div className=\"actions\">\n                            <a className=\"button\">Register</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nDashboard.getInitialProps = async ({ query }) => {\n    var domainExtensions = [\"com\", \"net\", \"io\", \"shop\", \"org\", \"co\", \"me\"];\n    var socialMedia = [\"facebook\", \"instagram\", \"youtube\", \"twitter\", \"tumblr\", \"pinterest\"];\n    var localDomainExtension = await fetch(\"http://localhost:3000/getLocalExtension\")\n    localDomainExtension = await localDomainExtension.json()\n    domainExtensions.push(localDomainExtension)\n    console.log(localDomainExtension);\n    return { query, domainExtensions, localDomainExtension, socialMedia }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}